% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/cr_ft_links.R
\name{cr_ft_links}
\alias{cr_ft_links}
\title{Get full text links from a DOI}
\usage{
cr_ft_links(doi, type = "xml", ...)
}
\arguments{
\item{doi}{A DOI}

\item{type}{One of xml, plain, pdf, or all}

\item{...}{Named parameters passed on to \code{\link[httr]{GET}}}
}
\description{
Get full text links from a DOI
}
\details{
Note that \code{\link{cr_ft_links}} is not vectorized.

Note that some links returned will not in fact lead you to full text
content as you would understandbly think and expect. That is, if you
use the \code{filter} parameter with e.g., \code{\link{cr_works}} and
filter to only full text content, some links may actually give back
only metadata for an article. Elsevier is perhaps the worst offender,
for one because they have a lot of entries in Crossref TDM, but most
of the links that are apparently full text are not in facct full text,
but only metadata.
}
\examples{
\dontrun{
# pdf link
cr_ft_links(doi = "10.5555/515151", "pdf")

# xml and plain text links
out <- cr_works(filter=c(has_full_text = TRUE))
dois <- out$data$DOI
cr_ft_links(dois[2], "xml")
cr_ft_links(dois[1], "plain")
cr_ft_links(dois[1], "all")

# No links
cr_ft_links(cr_r(1), "xml")
}
}

